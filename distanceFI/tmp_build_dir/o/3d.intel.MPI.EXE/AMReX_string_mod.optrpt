Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -Itmp_build_dir/o/3d.intel.MPI.EXE -I. -I. -I/home/zou00066/peleLM/amrex/Src/Base -I/home/zou00066/peleLM/amrex/Src/Boundary -I/home/zou00066/peleLM/amrex/Src/EB -I/home/zou00066/peleLM/amrex/Src/AmrCore -I../Tools/SDFGen -I/stage/opt/OpenMPI/4.0.2/Intel/2019_U4_EPYC_MLNX/include -I/stage/opt/OpenMPI/4.0.2/Intel/2019_U4_EPYC_MLNX/lib -g -O2 -ip -qopt-report=5 -qopt-report-phase=vec -implicitnone -module tmp_build_dir/o/3d.intel.MPI.EXE -DBL_LANG_FORT -DAMREX_LANG_FORT -DBL_USE_MPI -DAMREX_USE_MPI -DAMREX_GIT_VERSION="20.06-82-gdf3e65beac99-dirty" -DAMREX_LAUNCH= -DAMREX_DEVICE= -DAMREX_CUDA_FORT_GLOBAL= -DAMREX_CUDA_FORT_DEVICE= -DAMREX_CUDA_FORT_HOST= -DAMREX_CUDA_FORT_HOST_DEVICE= -DBL_SPACEDIM=3 -DAMREX_SPACEDIM=3 -DBL_FORT_USE_UNDERSCORE -DAMREX_FORT_USE_UNDERSCORE -DBL_Linux -DAMREX_Linux -DBL_USE_ASSERTION -DAMREX_USE_ASSERTION -DAMREX_USE_EB -c -o tmp_build_dir/o/3d.intel.MPI.EXE/AMReX_string_mod.o

Begin optimization report for: AMREX_STRING_MODULE::AMREX_STRING_F_TO_C

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(25,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(25,5)
   remark #15388: vectorization support: reference cstr(i) has aligned access   [ /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(26,8) ]
   remark #15388: vectorization support: reference fstr(i-1) has aligned access   [ /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(26,18) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 4.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 7.720 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(25,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(25,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: AMREX_STRING_MODULE::AMREX_STRING_C_TO_F

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(37,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(39,8) ]
LOOP END
===========================================================================

Begin optimization report for: AMREX_STRING_MODULE::AMREX_STRING_BUILD

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(50,5)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(50,5)
   remark #15388: vectorization support: reference str(i) has aligned access   [ /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(51,8) ]
   remark #15388: vectorization support: reference fstr(i-1) has aligned access   [ /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(51,22) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 4.667
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 0.180 
   remark #15478: estimated potential speedup: 7.720 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(50,5)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(50,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: AMREX_STRING_MODULE::AMREX_STRING_F_TO_LOWER

    Report from: Vector optimizations [vec]


LOOP BEGIN at /home/zou00066/peleLM/amrex/Src/Base/AMReX_string_mod.F90(62,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between flo(i-1) (65:14) and flo(i-1) (67:14)
   remark #15346: vector dependence: assumed OUTPUT dependence between flo(i-1) (67:14) and flo(i-1) (65:14)
LOOP END
===========================================================================
